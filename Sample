$ns = "airflow"

kubectl -n $ns create secret generic airflow-api-secret `
  --from-literal=api-secret="c8e6a5a2-5f1d-4dbb-9b0f-8c29e3f7d1a4" `
  --dry-run=client -o yaml | kubectl apply -f -

kubectl -n $ns get secret airflow-api-secret -o yaml

$deployments = @("airflow-scheduler","airflow-web")
$ns = "airflow"
$secretName = "airflow-api-secret"
$secretKey = "api-secret"

kubectl -n airflow patch deploy airflow-scheduler --type='strategic' --patch @"
spec:
  template:
    spec:
      containers:
      - name: scheduler
        env:
        - name: AIRFLOW__API__SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: airflow-api-secret
              key: api-secret
"@

kubectl -n airflow patch deploy airflow-webserver --type='strategic' --patch @"
spec:
  template:
    spec:
      containers:
      - name: webserver
        env:
        - name: AIRFLOW__API__SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: airflow-api-secret
              key: api-secret
"@



kubectl -n $ns rollout restart deploy airflow-scheduler
kubectl -n $ns rollout restart deploy airflow-web
kubectl -n $ns get pods -w

$SCH = kubectl -n $ns get pod -l app=airflow-scheduler -o jsonpath='{.items[0].metadata.name}'
$WS  = kubectl -n $ns get pod -l app=airflow-web -o jsonpath='{.items[0].metadata.name}'

kubectl -n $ns exec $SCH -- printenv | Select-String "AIRFLOW__API__SECRET_KEY"
kubectl -n $ns exec $WS  -- printenv | Select-String "AIRFLOW__API__SECRET_KEY"


kubectl -n $ns exec $WS -- sh -c "curl -v --max-time 10 http://airflow-scheduler:8793/log/dag_id=<dag_id>/run_id=<run_id>/task_id=<task_id>/attempt=1.log"
