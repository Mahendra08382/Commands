# =========================
#  Snowflake Flask endpoints
# =========================
from flask import Flask, jsonify, abort

app = Flask(__name__)

# Hardcode per your DB + schema
database = "DDM_TEST"
schema = "EMPLOYEE"
warehouse = "COMPUTE_WH"   # ðŸ‘ˆ replace with your actual warehouse name

def fetch_top10(table_name: str):
    if not table_name or not table_name.replace('_', '').isalnum():
        raise ValueError("Invalid table name.")

    sql = f'SELECT * FROM "{database}"."{schema}"."{table_name.upper()}" LIMIT 10'
    print(f"[sfapi] Executing SQL: {sql}")

    # reuse your helpers
    passphrase, pem = get_pass_cert_from_client(account_name, devops_id_full)
    con = connect_2_snowflake_db(pem, passphrase, devops_id_full, account_name, devops_id_role)

    try:
        with con.cursor() as cur:
            # âœ… ensure warehouse is set
            cur.execute(f'USE WAREHOUSE "{warehouse}"')
            cur.execute(sql)

            cols = [c[0] for c in cur.description]
            rows = cur.fetchall()
        return [dict(zip(cols, r)) for r in rows]
    finally:
        try:
            con.close()
        except Exception:
            pass

@app.get("/sfapi/health")
def sf_health():
    return {"status": "ok"}

@app.get("/sfapi/table/<string:table_name>")
def sf_table_top10(table_name: str):
    try:
        data = fetch_top10(table_name)
        return jsonify(data)
    except ValueError as ve:
        abort(400, str(ve))
    except Exception as e:
        return jsonify({"error": str(e)}), 500

if __name__ == "__main__":
    print("[sfapi] Starting on http://127.0.0.1:5051")
    app.run(host="127.0.0.1", port=5051, debug=True)
