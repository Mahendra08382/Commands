@"
spec:
  template:
    spec:
      volumes:
      - name: airflow-logs
        persistentVolumeClaim:
          claimName: airflow-logs-pvc
      containers:
      - name: airflow-web
        volumeMounts:
        - name: airflow-logs
          mountPath: /opt/airflow/logs
"@ > web-patch.yaml

kubectl -n airflow patch deploy airflow-web --patch "$(Get-Content -Raw web-patch.yaml)" --type=merge



kubectl -n airflow patch deploy airflow-web --type='json' -p '[{"op":"add","path":"/spec/template/spec/volumes/-","value":{"name":"airflow-logs","persistentVolumeClaim":{"claimName":"airflow-logs-pvc"}}},{"op":"add","path":"/spec/template/spec/containers/0/volumeMounts/-","value":{"name":"airflow-logs","mountPath":"/opt/airflow/logs"}}]'

kubectl -n airflow patch deploy airflow-scheduler --type='json' -p '[{"op":"add","path":"/spec/template/spec/volumes/-","value":{"name":"airflow-logs","persistentVolumeClaim":{"claimName":"airflow-logs-pvc"}}},{"op":"add","path":"/spec/template/spec/containers/0/volumeMounts/-","value":{"name":"airflow-logs","mountPath":"/opt/airflow/logs"}}]'


kubectl -n airflow set env deploy/airflow-web AIRFLOW__LOGGING__REMOTE_LOGGING=false AIRFLOW__CORE__BASE_LOG_FOLDER=/opt/airflow/logs
kubectl -n airflow set env deploy/airflow-scheduler AIRFLOW__LOGGING__REMOTE_LOGGING=false AIRFLOW__CORE__BASE_LOG_FOLDER=/opt/airflow/logs




kubectl -n airflow rollout restart deploy/airflow-scheduler
kubectl -n airflow rollout restart deploy/airflow-web
# wait until pods are ready
kubectl -n airflow get pods -l app in (airflow-scheduler,airflow-web) -o wide --watch


$web = kubectl -n airflow get pods --selector=app=airflow-web --no-headers -o custom-columns=NAME:.metadata.name
kubectl -n airflow exec -it $web -- sh -c "ls -la /opt/airflow || echo '/opt/airflow not found'; ls -la /opt/airflow/logs || echo 'logs dir missing'"


